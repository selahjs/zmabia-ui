stages:
  - build-latest
  - build-version

variables:
  DOCKER_DRIVER: overlay
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_STARTUP_TIMEOUT: 120
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HUB_USERNAME: "elogistics"
  DOCKER_HUB_PASSWORD: "wte6bp256nc4v7hwpv"
services:
  - name: docker:dind
    command: ["--tls=false"]

before_script:
  - docker info || true  # Check Docker info and ignore errors
  - apt-get update && apt-get install -y docker.io  # Install Docker
  - service docker start  # Start Docker service
  - curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose  # Download Docker Compose binary
  - chmod +x /usr/local/bin/docker-compose  # Make Docker Compose binary executable

build-latest:
  stage: build-latest
  when: manual
  script:
    - set -e  # Exit immediately if a command exits with a non-zero status
    - export VERSION="latest"
    - wget -O .env https://raw.githubusercontent.com/OpenLMIS/openlmis-ref-distro/master/settings-sample.env
    - docker-compose pull
    - docker-compose run --entrypoint ./build.sh svg-ui
    - docker-compose build image
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
    - docker tag elogistics/svg-ui:latest "$DOCKER_HUB_USERNAME/svg-ui:latest"
    - docker push "$DOCKER_HUB_USERNAME/svg-ui:latest"

build-version:
  stage: build-version
  when: manual
  script:
    - set -e  # Exit immediately if a command exits with a non-zero status
    - export VERSION="1.0.0-SNAPSHOT"
    - wget -O .env https://raw.githubusercontent.com/OpenLMIS/openlmis-ref-distro/master/settings-sample.env
    - docker-compose pull
    - docker-compose run --entrypoint ./build.sh svg-ui
    - docker-compose build image
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
    - docker tag elogistics/svg-ui:latest "$DOCKER_HUB_USERNAME/svg-ui:$VERSION"
    - docker push "$DOCKER_HUB_USERNAME/svg-ui:$VERSION"
